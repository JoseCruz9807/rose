
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'COLON COMMA CTEF CTEI CTES DIFFERENT DIVIDE ELSE EQUALS FLOAT GT ID IF INT LEFTBRACKET LEFTPARENTHESIS LT MINUS MULTIPLY PERIOD PLUS PRINT PROGRAM RIGHTBRACKET RIGHTPARENTHESIS SEMICOLON VAR\n    patito : PROGRAM ID SEMICOLON vars bloque\n            | PROGRAM ID SEMICOLON bloque\n    \n    bloque : LEFTBRACKET b RIGHTBRACKET\n    \n    b : estatuto b\n        | empty\n    \n    estatuto : asignacion\n            | condicion\n            | escritura\n    \n    vars : VAR c\n    \n    c : ID COMMA c\n        | ID COLON tipo SEMICOLON c\n        | ID COLON tipo SEMICOLON\n    \n    tipo : INT \n        | FLOAT\n    \n    asignacion : ID EQUALS expresion SEMICOLON\n    \n    escritura : PRINT LEFTPARENTHESIS e RIGHTPARENTHESIS SEMICOLON\n    \n    e : expresion PERIOD e\n        | CTES PERIOD e\n        | CTES\n        | expresion\n        | empty\n    \n    expresion : exp GT exp\n                | exp LT exp\n                | exp DIFFERENT exp\n                | exp\n    \n    exp : termino g\n    \n    g : PLUS termino g\n        | MINUS termino g\n        | empty\n    \n    condicion : IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS bloque h SEMICOLON\n    \n    h : ELSE bloque \n        | empty\n    \n    termino : factor i\n            | factor\n    \n    i : MULTIPLY factor i\n        | DIVIDE factor i\n        | MULTIPLY factor\n        | DIVIDE factor\n    \n    factor : LEFTPARENTHESIS expresion RIGHTPARENTHESIS\n            | PLUS varcte\n            | MINUS varcte\n            | varcte\n    \n    varcte : ID\n            | CTEI\n            | CTEF\n    \n    empty : \n    '
    
_lr_action_items = {'DIFFERENT':([28,30,32,35,39,40,41,48,50,52,53,54,67,68,69,70,71,80,81,82,83,],[-46,-42,-34,-43,-45,63,-44,-29,-26,-41,-40,-33,-46,-46,-37,-38,-39,-27,-28,-35,-36,]),'MULTIPLY':([30,32,35,39,41,52,53,69,70,71,],[-42,55,-43,-45,-44,-41,-40,55,55,-39,]),'PROGRAM':([0,],[2,]),'PRINT':([6,11,12,13,18,65,74,87,],[14,-6,14,-7,-8,-15,-16,-30,]),'MINUS':([23,24,25,28,30,32,33,35,39,41,49,51,52,53,54,55,56,58,59,61,62,63,67,68,69,70,71,82,83,],[29,29,29,51,-42,-34,29,-43,-45,-44,29,29,-41,-40,-33,29,29,29,29,29,29,29,51,51,-37,-38,-39,-35,-36,]),'COMMA':([20,],[27,]),'DIVIDE':([30,32,35,39,41,52,53,69,70,71,],[-42,56,-43,-45,-44,-41,-40,56,56,-39,]),'SEMICOLON':([3,21,28,30,32,35,39,40,41,43,44,45,46,48,50,52,53,54,60,67,68,69,70,71,75,76,77,78,80,81,82,83,84,86,88,],[4,-3,-46,-42,-34,-43,-45,-25,-44,65,66,-13,-14,-29,-26,-41,-40,-33,74,-46,-46,-37,-38,-39,-23,-22,-24,-46,-27,-28,-35,-36,87,-32,-31,]),'LT':([28,30,32,35,39,40,41,48,50,52,53,54,67,68,69,70,71,80,81,82,83,],[-46,-42,-34,-43,-45,61,-44,-29,-26,-41,-40,-33,-46,-46,-37,-38,-39,-27,-28,-35,-36,]),'PLUS':([23,24,25,28,30,32,33,35,39,41,49,51,52,53,54,55,56,58,59,61,62,63,67,68,69,70,71,82,83,],[31,31,31,49,-42,-34,31,-43,-45,-44,31,31,-41,-40,-33,31,31,31,31,31,31,31,49,49,-37,-38,-39,-35,-36,]),'RIGHTPARENTHESIS':([23,28,30,32,34,35,36,37,38,39,40,41,42,48,50,52,53,54,57,58,59,67,68,69,70,71,72,73,75,76,77,80,81,82,83,],[-46,-46,-42,-34,-21,-43,-20,-19,60,-45,-25,-44,64,-29,-26,-41,-40,-33,71,-46,-46,-46,-46,-37,-38,-39,-17,-18,-23,-22,-24,-27,-28,-35,-36,]),'COLON':([20,],[26,]),'LEFTPARENTHESIS':([14,15,23,24,25,33,49,51,55,56,58,59,61,62,63,],[23,24,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'$end':([1,8,9,21,],[0,-2,-1,-3,]),'RIGHTBRACKET':([6,10,11,12,13,17,18,22,65,74,87,],[-46,21,-6,-46,-7,-5,-8,-4,-15,-16,-30,]),'GT':([28,30,32,35,39,40,41,48,50,52,53,54,67,68,69,70,71,80,81,82,83,],[-46,-42,-34,-43,-45,62,-44,-29,-26,-41,-40,-33,-46,-46,-37,-38,-39,-27,-28,-35,-36,]),'LEFTBRACKET':([4,5,19,47,64,66,79,85,],[6,6,-9,-10,6,-12,-11,6,]),'EQUALS':([16,],[25,]),'PERIOD':([28,30,32,35,36,37,39,40,41,48,50,52,53,54,67,68,69,70,71,75,76,77,80,81,82,83,],[-46,-42,-34,-43,58,59,-45,-25,-44,-29,-26,-41,-40,-33,-46,-46,-37,-38,-39,-23,-22,-24,-27,-28,-35,-36,]),'ELSE':([21,78,],[-3,85,]),'VAR':([4,],[7,]),'ID':([2,6,7,11,12,13,18,23,24,25,27,29,31,33,49,51,55,56,58,59,61,62,63,65,66,74,87,],[3,16,20,-6,16,-7,-8,35,35,35,20,35,35,35,35,35,35,35,35,35,35,35,35,-15,20,-16,-30,]),'IF':([6,11,12,13,18,65,74,87,],[15,-6,15,-7,-8,-15,-16,-30,]),'CTES':([23,58,59,],[37,37,37,]),'INT':([26,],[45,]),'FLOAT':([26,],[46,]),'CTEF':([23,24,25,29,31,33,49,51,55,56,58,59,61,62,63,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'CTEI':([23,24,25,29,31,33,49,51,55,56,58,59,61,62,63,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expresion':([23,24,25,33,58,59,],[36,42,43,57,36,36,]),'varcte':([23,24,25,29,31,33,49,51,55,56,58,59,61,62,63,],[30,30,30,52,53,30,30,30,30,30,30,30,30,30,30,]),'c':([7,27,66,],[19,47,79,]),'b':([6,12,],[10,22,]),'e':([23,58,59,],[38,72,73,]),'vars':([4,],[5,]),'asignacion':([6,12,],[11,11,]),'i':([32,69,70,],[54,82,83,]),'patito':([0,],[1,]),'estatuto':([6,12,],[12,12,]),'tipo':([26,],[44,]),'g':([28,67,68,],[50,80,81,]),'condicion':([6,12,],[13,13,]),'termino':([23,24,25,33,49,51,58,59,61,62,63,],[28,28,28,28,67,68,28,28,28,28,28,]),'exp':([23,24,25,33,58,59,61,62,63,],[40,40,40,40,40,40,75,76,77,]),'factor':([23,24,25,33,49,51,55,56,58,59,61,62,63,],[32,32,32,32,32,32,69,70,32,32,32,32,32,]),'bloque':([4,5,64,85,],[8,9,78,88,]),'h':([78,],[84,]),'empty':([6,12,23,28,58,59,67,68,78,],[17,17,34,48,34,34,48,48,86,]),'escritura':([6,12,],[18,18,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> patito","S'",1,None,None,None),
  ('patito -> PROGRAM ID SEMICOLON vars bloque','patito',5,'p_patito','patito.py',113),
  ('patito -> PROGRAM ID SEMICOLON bloque','patito',4,'p_patito','patito.py',114),
  ('bloque -> LEFTBRACKET b RIGHTBRACKET','bloque',3,'p_bloque','patito.py',121),
  ('b -> estatuto b','b',2,'p_b','patito.py',125),
  ('b -> empty','b',1,'p_b','patito.py',126),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','patito.py',131),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','patito.py',132),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','patito.py',133),
  ('vars -> VAR c','vars',2,'p_vars','patito.py',138),
  ('c -> ID COMMA c','c',3,'p_c','patito.py',144),
  ('c -> ID COLON tipo SEMICOLON c','c',5,'p_c','patito.py',145),
  ('c -> ID COLON tipo SEMICOLON','c',4,'p_c','patito.py',146),
  ('tipo -> INT','tipo',1,'p_tipo','patito.py',151),
  ('tipo -> FLOAT','tipo',1,'p_tipo','patito.py',152),
  ('asignacion -> ID EQUALS expresion SEMICOLON','asignacion',4,'p_asignacion','patito.py',157),
  ('escritura -> PRINT LEFTPARENTHESIS e RIGHTPARENTHESIS SEMICOLON','escritura',5,'p_escritura','patito.py',162),
  ('e -> expresion PERIOD e','e',3,'p_e','patito.py',167),
  ('e -> CTES PERIOD e','e',3,'p_e','patito.py',168),
  ('e -> CTES','e',1,'p_e','patito.py',169),
  ('e -> expresion','e',1,'p_e','patito.py',170),
  ('e -> empty','e',1,'p_e','patito.py',171),
  ('expresion -> exp GT exp','expresion',3,'p_expresion','patito.py',177),
  ('expresion -> exp LT exp','expresion',3,'p_expresion','patito.py',178),
  ('expresion -> exp DIFFERENT exp','expresion',3,'p_expresion','patito.py',179),
  ('expresion -> exp','expresion',1,'p_expresion','patito.py',180),
  ('exp -> termino g','exp',2,'p_exp','patito.py',185),
  ('g -> PLUS termino g','g',3,'p_g','patito.py',191),
  ('g -> MINUS termino g','g',3,'p_g','patito.py',192),
  ('g -> empty','g',1,'p_g','patito.py',193),
  ('condicion -> IF LEFTPARENTHESIS expresion RIGHTPARENTHESIS bloque h SEMICOLON','condicion',7,'p_condicion','patito.py',198),
  ('h -> ELSE bloque','h',2,'p_h','patito.py',203),
  ('h -> empty','h',1,'p_h','patito.py',204),
  ('termino -> factor i','termino',2,'p_termino','patito.py',209),
  ('termino -> factor','termino',1,'p_termino','patito.py',210),
  ('i -> MULTIPLY factor i','i',3,'p_i','patito.py',215),
  ('i -> DIVIDE factor i','i',3,'p_i','patito.py',216),
  ('i -> MULTIPLY factor','i',2,'p_i','patito.py',217),
  ('i -> DIVIDE factor','i',2,'p_i','patito.py',218),
  ('factor -> LEFTPARENTHESIS expresion RIGHTPARENTHESIS','factor',3,'p_factor','patito.py',223),
  ('factor -> PLUS varcte','factor',2,'p_factor','patito.py',224),
  ('factor -> MINUS varcte','factor',2,'p_factor','patito.py',225),
  ('factor -> varcte','factor',1,'p_factor','patito.py',226),
  ('varcte -> ID','varcte',1,'p_varcte','patito.py',231),
  ('varcte -> CTEI','varcte',1,'p_varcte','patito.py',232),
  ('varcte -> CTEF','varcte',1,'p_varcte','patito.py',233),
  ('empty -> <empty>','empty',0,'p_empty','patito.py',238),
]
